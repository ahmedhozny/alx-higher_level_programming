The ``5-text_indentation`` module
======================

Using ``text_indentation``
-------------------

Importing the function from the module:
    >>> text_indentation = __import__('5-text_indentation').text_indentation

Trying text hello?:
    >>> text_indentation("Hello?")
    Hello?
    <BLANKLINE>

No spaces are printed at the beginning of a line:
    >>> text_indentation("   Hi there.")
    Hi there.
    <BLANKLINE>

    >>> text_indentation("          ")

No spaces are printed at the end of each printed line:
    >>> text_indentation("Hello.   ")
    Hello.
    <BLANKLINE>

Spaces before and after separators:
    >>> text_indentation("    Woah now.    This is messy.   ")
    Woah now.
    <BLANKLINE>
    This is messy.
    <BLANKLINE>

After separators:
    >>> text_indentation("No ending period, what bad grammar")
    No ending period, what bad grammar

New lines within a string are printed as normal:
    >>> text_indentation("Let's print a new-line! Here goes:\nPrinted.")
    Let's print a new-line! Here goes:
    <BLANKLINE>
    <BLANKLINE>
    Printed.
    <BLANKLINE>

With other datatypes (int):
    >>> text_indentation(7)
    Traceback (most recent call last):
    TypeError: text must be a string

With other datatypes (dict):
    >>> text_indentation({"one": 1, "two": 2})
    Traceback (most recent call last):
    TypeError: text must be a string

Testing None:
    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string